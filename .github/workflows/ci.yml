name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  STICKY_LINT_MESSAGE_ID: lint-failure
  STICKY_FORMATTING_MESSAGE_ID: formatting-failure
  STICKY_BUILD_AND_TEST_MESSAGE_ID: test-or-failure

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository ‚è¨
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js üíø
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies üí§
        run: pnpm install

      - name: Run linting üßπ
        id: linting
        run: pnpm lint:check --output-file=eslint-report.json --format=json

      - name: Generate comment about lint results
        if: always() && steps.linting.outcome == 'failure'
        id: lint-comment
        uses: ./.github/actions/eslint-comment-result
        with:
          eslint-output-path: eslint-report.json

      - name: Report lint failure
        if: always() && steps.linting.outcome == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_LINT_MESSAGE_ID }}
          message: |
            ${{ steps.lint-comment.outputs.message }}

            ---

            _Frequently Asked Questions ‚ùî_

            <details>
              <summary>Why do I see this message?</summary>

              We use [ESLint](https://eslint.org/) as our JavaScript [linter](https://en.wikipedia.org/wiki/Lint_%28software%29), and run it as part of CI workflow for each PR. It found some errors in this PR's branch.
            </details>

            <details>
              <summary>One of the files with lint errors is autogenerated. What should I do?</summary>

              You have a few options:
              - if you want to ignore the errors and you can access the code generator's source or configuration, you can add an `/* eslint-disable */` comment to the top of the file. This is what [unplugin/unplugin-auto-import](https://github.com/unplugin/unplugin-auto-import/blob/main/test/__snapshots__/dts.test.ts.snap) or [graphql codegen](https://the-guild.dev/graphql/codegen/plugins/other/add) do for example
              - if you want to ignore the errors, but cant change the file output, you should find the `.eslintignore` file at the root of the repository and write a globe pattern to ignore this (and potentially other, new) generated file
              - if you want to fix the errors and can access the code generator's source, you could use the [ESLint API](https://eslint.org/docs/latest/integrate/nodejs-api) as part of the generation process to fix the issues.
            </details>

            <details>
              <summary>The reported error is in a file I haven't touched. What should I do?</summary>

              Someone might have bypassed the branch protection rules, and committed a file with lint errors to master. The best you can do is to create a new PR with only the lint fixes, and notify everyone else in the [slack channel]() about it. After that PR gets merged, you can merge master into this PR, and the lint errors will be solved.
            </details>

            <details>
              <summary>I didn't see these errors in my IDE, is there a way to see them there?</summary>

              Of course! If you are using [VSCode](https://code.visualstudio.com/), download the [ESLint extension](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint) and then reload your IDE. You might also want to read [the documentation about how to install every recommended extension]().
              If you still can't see the lint errors in the IDE, contact **Zoltan Lehoczky**, and he will help:)

              You can also add the following configuration to your [user's setting.json](https://code.visualstudio.com/docs/getstarted/settings) file, to auto-fix errors on save:

              ```json
              {
                "editor.codeActionsOnSave": {
                  "source.fixAll.eslint": true,
                }
              }
              ```
            </details>

            <details>
              <summary>I think one of the rules should be turned off, because it doesn't make sense to use it. Who should I contact?</summary>

              You can suggest turning a rule off in the [#frontend]() channel. Make sure to describe your arguments against the rules, and link other sources with the information if you can:)
            </details>

            <details>
              <summary>I think this message can be improved. Who should I tell my ideas?</summary>

              You can post your improvement idea in the [#frontend]() channel, we will make sure to respond, and take your suggestions seriously;)
            </details>
          recreate: true

      - name: Remove last lint failure message
        if: always() && steps.linting.outcome != 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_LINT_MESSAGE_ID }}
          delete: true

  check-formatting:
    name: Check formatting with prettier
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository ‚è¨
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js üíø
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies üí§
        run: pnpm install

      - name: Check formatting üé®
        id: formatting
        run: pnpm format:check

      - name: Create message for formatting failure
        if: always() && steps.formatting.outcome == 'failure'
        id: message
        uses: Lehoczky/render-nunjucks-template-action@v1.0.0
        with:
          template-path: .github/templates/formatting-error-message.md
          auto-escape: false
          trim-blocks: true

      - name: Report formatting failure
        if: always() && steps.formatting.outcome == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_FORMATTING_MESSAGE_ID }}
          message: ${{ steps.message.outputs.result }}
          recreate: true

      - name: Remove last formatting failure message if everything went fine
        if: always() && steps.formatting.outcome != 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_FORMATTING_MESSAGE_ID }}
          delete: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository ‚è¨
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js üíø
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies üí§
        run: pnpm install

      - name: Build the app üë∑‚Äç‚ôÇÔ∏è
        run: pnpm -F app build

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2]
    steps:
      - name: Check out Git repository ‚è¨
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js üíø
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies üí§
        run: pnpm install

      - name: Run tests üß™
        run: pnpm -F app jest --shard=${{ matrix.shard }}/2

  test-result-summary:
    name: Summarize test job results
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: Return with an error status if any of the test shards failed
        if: needs.test.result == 'failure'
        run: exit 1

  build-and-test-failure-report:
    name: Reports the failure of the build or the test job
    runs-on: ubuntu-latest
    needs: [build, test-result-summary]
    if: always()
    steps:
      - name: Report build and test failure
        if: needs.test-result-summary.result == 'failure' && needs.build.result == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_BUILD_AND_TEST_MESSAGE_ID }}
          message: |
            ### <img src="https://api.iconify.design/logos:typescript-icon.svg" height="24" align="top" /> <img src="https://api.iconify.design/logos:jest.svg" height="24" align="top" /> Both building the app and it's tests have failed ‚ùå

            For more details, see the workflow output: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            > [!NOTE]
            > It is very likely that the test are failing because of the build error. We recommend checking that out first.

            > [!IMPORTANT]
            > If the build error is **not related to the changes made in your PR**, please check out the master branch and if the build is failing there as well, **write a slack message for us in the [#channel]()** and we're going to fix the issue as soon as possible.
          recreate: true

      - name: Report build failure
        if: needs.test-result-summary.result != 'failure' && needs.build.result == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_BUILD_AND_TEST_MESSAGE_ID }}
          message: |
            ### <img src="https://api.iconify.design/logos:typescript-icon.svg" height="24" align="top" /> Building the App Failed ‚ùå

            For details, see the workflow output: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            > [!IMPORTANT]
            > If the error is **not related to the changes made in your PR**, please check out the master branch and if the build is failing there as well, **write a slack message for us in the [#channel]()** and we're going to fix the issue as soon as possible.
          recreate: true

      - name: Report test failure
        if: needs.test-result-summary.result == 'failure' && needs.build.result != 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_BUILD_AND_TEST_MESSAGE_ID }}
          message: |
            ### <img src="https://api.iconify.design/logos:jest.svg" height="24" align="top" /> Tests Failed ‚ùå

            For more details, see the workflow output: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          recreate: true

      - name: Remove last failure message if everything is right
        if: needs.test-result-summary.result != 'failure' && needs.build.result != 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: ${{ env.STICKY_BUILD_AND_TEST_MESSAGE_ID }}
          delete: true
